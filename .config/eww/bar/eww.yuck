
(defvar eww "$HOME/dotfiles/release/eww  -c $HOME/.config/eww/bar")

(defvar ws1 "focus")
(defvar ws2 "")
(defvar ws3 "")
(defvar ws4 "")
(defvar ws5 "")
(defvar ws6 "")

(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    ""
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end" :valign "center"
    (metric :class "volume icon" :label "Û∞ïæ"
      :onclick "blueman-manager &"
      :value volume
    :onchange "wpctl set-volume -l 0.7 @DEFAULT_AUDIO_SINK@ {}%")
    (metric :class "cpu icon" :label "Ó∞ô"
      :onclick ""
      :value cpu
    :onchange "")
    (metric :class "ram icon" :label "ÓøÖ"
      :onclick ""
      :value {EWW_RAM.used_mem_perc}
    :onchange "")
    (metric :class "disk icon" :label "ÔÅª"
      :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
      :onclick ""
    :onchange "")
    (metric :class "bat icon" :label "Û∞Åπ"
      :onclick ""
      :value bat
    :onchange "")
    (time)))

;; Clock Widgets ;;
(defwidget time []
  (eventbox :onhover "${eww} update time_rev=true"
    :onhoverlost "${eww} update time_rev=false"
    (box	:orientation "h"
      :class "time"
      :valign "center"
      :space-evenly false
      (button	:onclick "sh $HOME/.config/eww/bar/scripts/popup calendar"
      :class "time" "${hour}:${min}")
      (revealer :transition "slideleft"
        :reveal time_rev
        :duration "350ms"
        (button :class "time"
          :onclick "sh $HOME/.config/eww/bar/scripts/popup calendar" "${day}/${month}/${year}"
        )
      )
    )))
(defpoll hour	:interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")
(defpoll day	:interval "1m"	"date '+%d'")
(defpoll month	:interval "1m"	"date '+%m'")
(defpoll year	:interval "1m"	"date '+%Y'")
(defvar time_rev false)

(defwidget workspaces []
  (box :class "workspaces"
    :orientation "h"
    :space-evenly false
    :halign "start"
    :valign "center"
    :spacing 0
    (button :class "${ws1} button" :onclick "hyprctl dispatch workspace 1 && sh $HOME/.config/eww/bar/scripts/focus 1" "Ó©±")
    (button :class "${ws2} button" :onclick "hyprctl dispatch workspace 2 && sh $HOME/.config/eww/bar/scripts/focus 2" "Ó©±")
    (button :class "${ws3} button" :onclick "hyprctl dispatch workspace 3 && sh $HOME/.config/eww/bar/scripts/focus 3" "Ó©±")
    (button :class "${ws4} button" :onclick "hyprctl dispatch workspace 4 && sh $HOME/.config/eww/bar/scripts/focus 4" "Ó©±")
    (button :class "${ws5} button" :onclick "hyprctl dispatch workspace 5 && sh $HOME/.config/eww/bar/scripts/focus 5" "Ó©±")
    (button :class "${ws6} button" :onclick "hyprctl dispatch workspace 6 && sh $HOME/.config/eww/bar/scripts/focus 6" "Ó©±")))

;; Workspaces Widgets ;;
; (defwidget workspaces []
  ; 	(literal :content workspace))
; (deflisten workspace "scripts/workspace")

(defwidget music []
  (box :class "music"
    :orientation "h"
    :space-evenly false
    :halign "center"
  {music != "" ? "üéµ${music}" : ""}))


(defwidget metric [class label value onchange onclick]
  (box :orientation "h"
    :class "metric"
    :space-evenly false
    (button :onclick onclick :class class label)
    (scale :min 0
      :max 100
      :orientation "h"
      :active {onchange != ""}
      :value value
    :onchange onchange)))

(defwidget cal []
  (box :class "cal" :orientation "v"
    (box :class "cal-in"
      (calendar :class "cal"
        :day day
      :year year))))

(defwindow calendar
  :class "calendar"
  :monitor 0
  :geometry (geometry :x "20px"
    :y "20px"
    :anchor "top right"
    :width "270px"
  :height "60px")
  (cal))


(deflisten music :initial ""
"playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "0.5s"
"wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2 * 100}'")

(defpoll bat :interval "30s"
"sh ./scripts/battery --bat")

(defpoll time :interval "10s"
"date '+%H:%M %b %d, %Y'")

(defpoll cpu :interval "1s"
"top -bn1 | grep 'Cpu(s)' | awk '{print 100 - $8}'")

(defwindow bar
  :class "bar"
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0px"
    :y "10px"
    :width "97%"
    :height "10px"
  :anchor "top center")
  :exclusive true
  :reserve (struts :side "top" :distance "4%")
  (bar))